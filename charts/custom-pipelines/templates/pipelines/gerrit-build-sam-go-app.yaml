{{ if has "gerrit" .Values.global.gitProviders }}
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: gerrit-sam-go-app-build-edp
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - default: >-
        https://tekton-edp-delivery.eks-core.aws.main.edp.projects.epam.com//#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      name: pipelineUrl
      type: string
    - default: https://github.com/epmd-edp/container-kaniko-docker
      description: git url to clone
      name: git-source-url
      type: string
    - default: edp
      description: git revision to checkout (branch, tag, sha, refâ€¦)
      name: git-source-revision
      type: string
    - default: 'golang:1.22-bookworm'
      description: npm image version
      name: image
      type: string
    - name: changeNumber
      description: "Change number from Merge Request"
    - name: patchsetNumber
      description: "Patchset number from Merge Request"
    - description: Project name
      name: CODEBASE_NAME
      type: string
    - description: Codebasebranch name
      name: CODEBASEBRANCH_NAME
      type: string
    - name: GOPROXY
      default: "http://athens-athens-proxy:80"
      description: "Go proxy link"
      type: string
  tasks:

{{- include "gerrit-build-start" . | nindent 4 }}

    - name: get-version
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(params.CODEBASEBRANCH_NAME)
      runAfter:
        - init-values
      taskRef:
        kind: Task
        name: get-version-edp

    - name: sam-lint
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: sam
      params:
        - name: EXTRA_COMMANDS
          value: >-
            SAM_CLI_TELEMETRY=0 sam validate --lint
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

    - name: build
      taskRef:
        kind: Task
        name: golang
      runAfter:
        - sam-lint
      params:
        - name: BASE_IMAGE
          value: $(params.image)
        - name: GOPROXY
          value: $(params.GOPROXY)
        - name: EXTRA_COMMANDS
          value: |
            cd source

            make test
            make build-go
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: git-tag
      taskRef:
        kind: Task
        name: git-cli
      runAfter:
        - build
      params:
        - name: GIT_USER_EMAIL
          value: edp-ci@edp.ci-user
        - name: GIT_USER_NAME
          value: edp-ci
        - name: GIT_SCRIPT
          value: |
            git tag -a "$(tasks.get-version.results.VCS_TAG)" -m "Tag is added automatically by CI user"
            git push --tags
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source
        - name: ssh-directory
          workspace: ssh-creds

    - name: update-cbis
      taskRef:
        kind: Task
        name: update-cbis
      runAfter:
        - git-tag
      params:
        - name: CBIS_NAME
          value: $(tasks.init-values.results.RESULT_IMAGE_NAME)
        - name: IMAGE_TAG
          value: $(tasks.get-version.results.IS_TAG)

{{- include "update-cbb" . | nindent 2 }}

{{ end }}
