{{ if has "gerrit" .Values.global.gitProviders }}
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: gerrit-go-cd-other-app-review
  labels:
    {{- include "edp-custom-pipelines.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: pipelineUrl
      default: https://tekton-{{ .Release.Namespace }}.{{ .Values.global.dnsWildCard }}/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      type: string
    - name: git-source-url
      default: "https://github.com/epmd-edp/go-go-beego"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "edp"
      type: string
    - name: git-refspec
      description: Refspec to fetch before checking out revision.
      default: ""
      type: string
    - name: CODEBASE_NAME
      default: "golang-go"
      description: "Project name"
      type: string
    - name: image
      default: 'golang:1.22-bookworm'
      description: "go image with make installed"
      type: string
    - name: GOPROXY
      default: "http://athens-athens-proxy:80"
      description: "Go proxy link"
      type: string
    - name: targetBranch
      description: Target branch of Merge Request
    - name: changeNumber
      description: Change number from Merge Request
    - name: patchsetNumber
      description: Patchset number from Merge Request
    - name: COMMIT_MESSAGE
      description: "Commit message"
    - name: COMMIT_MESSAGE_PATTERN
      description: "Pattern to validate a commit message"
    - name: CHART_DIR
      description: "Deploy templates directory for helm-lint"
      default: "deploy-templates"
    - name: CT_CONFIGS_DIR
      description: "ct-configs directory for helm-lint"
      default: "ct-configs"
  tasks:

{{- include "gerrit-review-start" . | nindent 4 }}

{{- include "get-cache" $ | nindent 4 }}

{{ include "gerrit-common" . | nindent 4 }}

    - name: build
      taskRef:
        kind: Task
        name: golang
      runAfter:
        - helm-docs
      params:
        - name: BASE_IMAGE
          value: $(params.image)
        - name: GOPROXY
          value: $(params.GOPROXY)
        - name: EXTRA_COMMANDS
          value: |
            cd source
            make build
            make test
            make lint
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: sonar
      taskRef:
        kind: Task
        name: sonarqube-general
      runAfter:
        - build
      params:
        - name: SONAR_PROJECT_KEY
          value: $(params.CODEBASE_NAME)
        - name: SONAR_PROJECT_NAME
          value: $(params.CODEBASE_NAME)
        - name: target-branch
          value: $(params.targetBranch)
        - name: source-branch
          value: $(params.git-source-revision)
        - name: key-id
          value: $(params.changeNumber)
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

    - name: dockerfile-lint
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: hadolint
      runAfter:
        - fetch-repository
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

    - name: kaniko-build
      params:
        - name: codebase-name
          value: "review/$(params.CODEBASE_NAME)"
        - name: image-tag
          value: "$(params.changeNumber)-$(params.patchsetNumber)"
        - name: image-tar
          value: "$(params.CODEBASE_NAME)-$(params.changeNumber)-$(params.patchsetNumber)"
      runAfter:
        - sonar
        - dockerfile-lint
      taskRef:
        kind: Task
        name: kaniko
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

    - name: e2e
      taskRef:
        kind: Task
        name: e2e
      runAfter:
        - kaniko-build
      params:
        - name: CODEBASE_NAME
          value: $(params.CODEBASE_NAME)
        - name: E2E_IMAGE_REPOSITORY
          value: "review/$(params.CODEBASE_NAME)"
        - name: E2E_IMAGE_TAG
          value: "$(params.changeNumber)-$(params.patchsetNumber)"
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

{{- include "save-cache" $ | nindent 4 }}

{{ include "gerrit-review-vote" . | nindent 2 }}

{{ end }}
