{{ if has "gerrit" .Values.global.gitProviders }}
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: gerrit-helm-other-app-review
  labels:
    {{- include "edp-custom-pipelines.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: pipelineUrl
      default: https://tekton-{{ .Release.Namespace }}.{{ .Values.global.dnsWildCard }}/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      type: string
    - name: git-source-url
      default: "https://github.com/epmd-edp/go-go-beego"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "edp"
      type: string
    - name: git-refspec
      description: Refspec to fetch before checking out revision.
      default: ""
      type: string
    - name: changeNumber
      description: Change number from Merge Request
    - name: patchsetNumber
      description: Patchset number from Merge Request
    - name: CODEBASE_NAME
      default: "golang-go"
      description: "Project name"
      type: string
    - name: GOPROXY
      default: "http://athens-athens-proxy:80"
      description: "Go proxy link"
      type: string
    - name: COMMIT_MESSAGE
      description: "Commit message"
    - name: COMMIT_MESSAGE_PATTERN
      description: "Pattern to validate a commit message"
    - name: targetBranch
      description: Target branch of Merge Request
    - name: CHART_DIR
      description: "Deploy templates directory for helm-lint"
      default: "deploy-templates"
    - name: CT_CONFIGS_DIR
      description: "ct-configs directory for helm-lint"
      default: "ct-configs"
  tasks:

{{- include "gerrit-review-start" . | nindent 4 }}

    - name: commit-validate
      taskRef:
        kind: Task
        name: commit-validate
      runAfter:
        - fetch-repository
      params:
        - name: COMMIT_MESSAGE_PATTERN
          value: $(params.COMMIT_MESSAGE_PATTERN)
        - name: COMMIT_MESSAGE
          value: $(params.COMMIT_MESSAGE)

    - name: helm-docs
      taskRef:
        kind: Task
        name: golang
      runAfter:
        - init-values
      params:
        - name: EXTRA_COMMANDS
          value: |
            GOPROXY=$(params.GOPROXY) make validate-docs
        - name: BASE_IMAGE
          value: "golang:1.22-bookworm"
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

    - name: helm-lint
      taskRef:
        kind: Task
        name: helm-lint
      runAfter:
        - fetch-repository
      params:
        # TODO add all repos needed to ct-config instead of EXTRA_COMMANDS
        - name: EXTRA_COMMANDS
          value: |
            helm repo add epamedp https://epam.github.io/edp-helm-charts/stable --force-update
            helm repo update
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

{{ include "gerrit-review-vote" . | nindent 2 }}

{{ end }}
