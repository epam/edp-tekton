{{ if has "gerrit" .Values.global.gitProviders }}
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: gerrit-sam-go-app-review
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - default: >-
        https://tekton-edp-delivery.eks-core.aws.main.edp.projects.epam.com/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      name: pipelineUrl
      type: string
    - default: https://github.com/epmd-edp/javascript-npm-react
      description: git url to clone
      name: git-source-url
      type: string
    - default: edp
      description: git revision to checkout (branch, tag, sha, refâ€¦)
      name: git-source-revision
      type: string
    - default: ''
      description: Refspec to fetch before checking out revision.
      name: git-refspec
      type: string
    - default: 'golang:1.22-bookworm'
      description: npm image version
      name: image
      type: string
    - name: GOPROXY
      default: "http://athens-athens-proxy:80"
      description: "Go proxy link"
      type: string
    - name: CODEBASE_NAME
      default: "sam-go"
      description: "Project name"
      type: string
    - description: Commit message
      name: COMMIT_MESSAGE
      type: string
    - description: Pattern to validate a commit message
      name: COMMIT_MESSAGE_PATTERN
      type: string
    - name: changeNumber
      description: Change number from Merge Request
    - name: patchsetNumber
      description: Patchset number from Merge Request
    - name: targetBranch
      description: Target branch of Merge Request
  tasks:

{{- include "gerrit-review-start" . | nindent 4 }}

    - name: commit-validate
      params:
        - name: COMMIT_MESSAGE_PATTERN
          value: $(params.COMMIT_MESSAGE_PATTERN)
        - name: COMMIT_MESSAGE
          value: $(params.COMMIT_MESSAGE)
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: commit-validate

    - name: sam-lint
      runAfter:
        - commit-validate
      taskRef:
        kind: Task
        name: sam
      params:
        - name: EXTRA_COMMANDS
          value: >-
            SAM_CLI_TELEMETRY=0 sam validate --lint
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

    - name: build
      taskRef:
        kind: Task
        name: golang
      runAfter:
        - sam-lint
      params:
        - name: BASE_IMAGE
          value: $(params.image)
        - name: GOPROXY
          value: $(params.GOPROXY)
        - name: EXTRA_COMMANDS
          value: |
            cd source

            make test
            make build-go
      workspaces:
        - name: source
          workspace: shared-workspace

{{ include "gerrit-review-vote" . | nindent 2 }}

{{ end }}
