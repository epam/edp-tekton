apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: update-release-version
  labels:
    app.kubernetes.io/version: "0.3"
spec:
  description: >-
    This Task is Golang task to build Go projects.
  workspaces:
    - name: source
  params:
    - name: version
      description: "For example: release/2.10"
      type: string
    - name: base_image
      description: "The execute image you want to use."
      default: "epamedp/tekton-python-make:0.1.6"
      type: string
    - name: node_image
      description: "The execute image you want to use."
      default: "docker.io/library/node:18.17.0-alpine3.18"
      type: string
    - name: chart-path
      description: "Path to chart directory"
      default: "deploy-templates"
      type: string
    - name: codebase-name
      description: "Application name"
      type: string
  steps:
    - name: update-helm-version
      image: $(params.base_image)
      workingDir: $(workspaces.source.path)
      env:
        - name: VERSION
          value: "$(params.version)"
        - name: CHART_PATH
          value: "$(params.chart-path)"
        - name: CODEBASE_NAME
          value: "$(params.codebase-name)"
      script: |
        #!/usr/bin/env sh
        set -e

        # release flow for components with charts
        IFS=$'\n'
        chartPath="./${CHART_PATH}/Chart.yaml"
        echo "Chart path ${chartPath}"

        echo "[TEKTON][DEBUG] Update Version and AppVersion in Chart.yaml"
        sed -i "s/^version:.*\$/version: ${VERSION}/" "${chartPath}"
        sed -i "s/^appVersion:.*\$/appVersion: ${VERSION}/" "${chartPath}"
        sed -i "s/${CODEBASE_NAME}:.*\$/${CODEBASE_NAME}:${VERSION}/" "${chartPath}"

        # Update version in README.md
        echo "[TEKTON][DEBUG] Generate Readme.md"
        make helm-docs

    - name: update-npm-version
      image: $(params.node_image)
      workingDir: $(workspaces.source.path)
      env:
        - name: VERSION
          value: "$(params.version)"
      script: |
        #!/usr/bin/env sh
        set -e

        # update version in package.json
        if [ -f package.json ]; then
          echo "[TEKTON][DEBUG] Update Package.json"
          npm version ${VERSION} --no-git-tag-version
        else
          echo "[TEKTON][DEBUG] Package.json not found."
        fi

    - name: git-tag-commit
      image: $(params.base_image)
      workingDir: $(workspaces.source.path)
      env:
        - name: VERSION
          value: "$(params.version)"
      script: |
        #!/usr/bin/env sh
        set -ex

        # release flow for components with changelog
        if [ -f CHANGELOG.md ]; then
            echo "[TEKTON][DEBUG] Generate Changelog.md"
            NEXT_RELEASE_TAG=${VERSION} make changelog
        fi

        export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"
        export GIT_SSH_VARIANT=ssh
        git config --global user.email SupportEPMD-EDP@epam.com
        git config --global user.name edp-bot

        # commit if changes are detected
        git diff -s --exit-code . || (git add . && git commit -m "Bump version to ${VERSION}")
        git tag -a "v${VERSION}" -m "Release ${VERSION}"
{{- include "resources" . | nindent 6 }}
