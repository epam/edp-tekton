{{ if .Values.pipelines.deployableResources.tasks }}
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: clean
spec:
  description: >-
    This task cleans up Argo CD applications for a specified Deployment Flow and Environment by deleting the applications matching the provided labels.
  params:
    - name: DEPLOYMENT_FLOW
      type: string
      description: |
        KRCI kind:CDPipeline name used for deployment. For example: mypipe, myfeature
    - name: ENVIRONMENT
      description: |
        KRCI kind:Stage name of the kind:CDPipeline defined in the CDPIPELINE values. For example: dev, test, prod
      type: string

  steps:
    - name: clean-argo-app
      image: {{ include "edp-tekton.registry" . }}/epamedp/tekton-cd-pipeline:0.1.4
      env:
        - name: ARGOCD_URL
          valueFrom:
            secretKeyRef:
              name: ci-argocd
              key: url
        - name: ARGOCD_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: ci-argocd
              key: token
      envFrom:
        - configMapRef:
            name: $(params.DEPLOYMENT_FLOW)-$(params.ENVIRONMENT)
      script: |
        set -ex

        export ARGOCD_OPTS="--core=false --grpc-web"
        # the address of the Argo CD server without https:// prefix
        export ARGOCD_SERVER=${ARGOCD_URL#*//}

        pipeline=$(params.DEPLOYMENT_FLOW)
        stage=$(params.ENVIRONMENT)

        selector="app.edp.epam.com/stage=$(params.ENVIRONMENT),app.edp.epam.com/pipeline=$(params.DEPLOYMENT_FLOW)"

        argocd app delete -l $selector -y
{{ end }}
